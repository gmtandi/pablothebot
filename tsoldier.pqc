void () NailGrenadeExplode;
void () NailGrenadeNailEm;
void () NailGrenadeLaunchNail;

void () NailGrenadeTouch =
{
	if ((other == self.owner))
	{
		return;
	}
	sound (self, TF_FLARE_OFF, "weapons/bounce.wav", TF_FLARE_OFF, TF_FLARE_OFF);
	if ((self.velocity == '0 0 0'))
	{
		self.avelocity = '0 0 0';
	}
};

void () NailGrenadeExplode =
{
	self.movetype = BOT_AI_GRAPPLE;
	setorigin (self, (self.origin + '0 0 32'));
	self.avelocity = '0 500 0';
	self.nextthink = (time + 0.7);
	self.think = NailGrenadeNailEm;
};

void () NailGrenadeNailEm =
{
	self.velocity = '0 0 0';
	self.nextthink = (time + 0.1);
	self.think = NailGrenadeLaunchNail;
	self.playerclass = TF_FLARE_LIT;
};

void () NailGrenadeLaunchNail =
{
	local float i;
	local float j;
	local float current_yaw;

	i = TF_FLARE_LIT;
	while ((i < BOT_AI_FOLLOW))
	{
		j = ((random () + BOT_FIGHTING) * BOT_AI_GRAPPLE);
		current_yaw = anglemod ((self.angles_y + j));
		self.angles_y = current_yaw;
		self.angles_x = TF_FLARE_LIT;
		self.angles_z = TF_FLARE_LIT;
		makevectors (self.angles);
		deathmsg = BOT_AI_FLAGRUN;
		launch_spike (self.origin, v_forward);
		newmis.touch = superspike_touch;
		newmis.weapon = BOT_AI_FLAGRUN;
		i = (i + TF_FLARE_OFF);
	}
	self.playerclass = (self.playerclass + TF_FLARE_OFF);
	self.nextthink = (time + 0.1);
	if ((self.playerclass > 50))
	{
		self.weapon = BOT_AI_FLAGRUN;
		self.think = GrenadeExplode;
	}
};
