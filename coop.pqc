
void () DroppedKeyThink =
{
	self.think = SUB_Null;
	self.touch = key_touch;
	self.owner = world;
};

void () DropKey =
{
	if (((self.items & 131072) || (self.items & 262144)))
	{
		newmis = spawn ();
		if ((self.items & 131072))
		{
			self.items = (self.items - (self.items & 131072));
			newmis.items = 131072;
			if ((world.worldtype == TF_FLARE_LIT))
			{
				setmodel (newmis, "progs/w_s_key.mdl");
				newmis.netname = "silver key";
				newmis.noise = "misc/medkey.wav";
			}
			else
			{
				if ((world.worldtype == TF_FLARE_OFF))
				{
					setmodel (newmis, "progs/m_s_key.mdl");
					newmis.netname = "silver runekey";
					newmis.noise = "misc/runekey.wav";
				}
				else
				{
					if ((world.worldtype == BOT_FIGHTING))
					{
						setmodel (newmis, "progs/b_s_key.mdl");
						newmis.netname = "silver keycard";
						newmis.noise = "misc/basekey.wav";
					}
				}
			}
		}
		else
		{
			if ((self.items & 262144))
			{
				self.items = (self.items - (self.items & 262144));
				newmis.items = 262144;
				if ((world.worldtype == TF_FLARE_LIT))
				{
					setmodel (newmis, "progs/w_g_key.mdl");
					newmis.netname = "gold key";
					newmis.noise = "misc/medkey.wav";
				}
				else
				{
					if ((world.worldtype == TF_FLARE_OFF))
					{
						setmodel (newmis, "progs/m_g_key.mdl");
						newmis.netname = "gold runekey";
						newmis.noise = "misc/runekey.wav";
					}
					else
					{
						if ((world.worldtype == BOT_FIGHTING))
						{
							setmodel (newmis, "progs/b_g_key.mdl");
							newmis.netname = "gold keycard";
							newmis.noise = "misc/basekey.wav";
						}
					}
				}
			}
		}
		newmis.owner = self;
		newmis.touch = SUB_Null;
		setorigin (newmis, (self.origin + '0 0 16'));
		makevectors (self.v_angle);
		newmis.velocity = ((normalize (v_forward) * 300) + '0 0 200');
		newmis.movetype = BOT_AI_FLEE;
		newmis.solid = TF_FLARE_OFF;
		newmis.deadflag = TF_FLARE_OFF;
		setsize (newmis, VEC_HULL_MIN, VEC_HULL_MAX);
		newmis.think = DroppedKeyThink;
		newmis.nextthink = (time + 1.5);
	}
	else
	{
		sprint (self, BOT_FIGHTING, "You don't have a key\n");
	}
};

float () DoorShouldOpen =
{
	local entity ptr;
	local float plyrcount;
	local entity plyr1;
	local entity plyr2;

	if ((coop != BOT_FIGHTING))
	{
		return (TF_FLARE_OFF);
	}
	plyrcount = TF_FLARE_LIT;
	ptr = find (world, classname, "player");
	while ((ptr != world))
	{
		if ((((!(ptr.tf_items & self.items) && (ptr.playerclass != TF_FLARE_LIT)) && (ptr.solid != TF_FLARE_LIT)) && (ptr.model != string_null)))
		{
			plyrcount = (plyrcount + TF_FLARE_OFF);
			if ((plyrcount == TF_FLARE_OFF))
			{
				plyr1 = ptr;
			}
			else
			{
				if ((plyrcount == BOT_FIGHTING))
				{
					plyr2 = ptr;
				}
			}
		}
		ptr = find (ptr, classname, "player");
	}
	if ((plyrcount != TF_FLARE_LIT))
	{
		if ((plyrcount == TF_FLARE_OFF))
		{
			bprint (BOT_FIGHTING, plyr1.netname);
			bprint (BOT_FIGHTING, " needs");
		}
		else
		{
			if ((plyrcount == BOT_FIGHTING))
			{
				bprint (BOT_FIGHTING, plyr1.netname);
				bprint (BOT_FIGHTING, " and ");
				bprint (BOT_FIGHTING, plyr2.netname);
				bprint (BOT_FIGHTING, " need");
			}
			else
			{
				bprint (BOT_FIGHTING, "More players need");
			}
		}
		bprint (BOT_FIGHTING, " to unlock the ");
		if ((self.items & 131072))
		{
			bprint (BOT_FIGHTING, "silver");
		}
		else
		{
			bprint (BOT_FIGHTING, "gold");
		}
		bprint (BOT_FIGHTING, " door\n");
		return (TF_FLARE_LIT);
	}
	bprint (BOT_FIGHTING, "The ");
	if ((self.items & 131072))
	{
		bprint (BOT_FIGHTING, "silver");
	}
	else
	{
		bprint (BOT_FIGHTING, "gold");
	}
	bprint (BOT_FIGHTING, " door has been unlocked\n");
	return (TF_FLARE_OFF);
};
